/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ForgotPasswordRouteImport } from './routes/forgot-password'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ResetPasswordTokenRouteImport } from './routes/reset-password.$token'
import { Route as DashboardCompanyCompanyIdRouteRouteImport } from './routes/dashboard/company.$companyId/route'
import { Route as DashboardCompanyCompanyIdUsersRouteImport } from './routes/dashboard/company.$companyId/users'
import { Route as DashboardCompanyCompanyIdProfileRouteImport } from './routes/dashboard/company.$companyId/profile'
import { Route as DashboardCompanyCompanyIdHomeRouteImport } from './routes/dashboard/company.$companyId/home'
import { Route as DashboardCompanyCompanyIdActivityLogsRouteImport } from './routes/dashboard/company.$companyId/activity-logs'
import { Route as DashboardCompanyCompanyIdSettingsRouteRouteImport } from './routes/dashboard/company.$companyId/settings/route'
import { Route as DashboardCompanyCompanyIdReportsRouteRouteImport } from './routes/dashboard/company.$companyId/reports/route'
import { Route as DashboardCompanyCompanyIdSettingsLocationsRouteImport } from './routes/dashboard/company.$companyId/settings/locations'
import { Route as DashboardCompanyCompanyIdSettingsIntegrationsRouteImport } from './routes/dashboard/company.$companyId/settings/integrations'
import { Route as DashboardCompanyCompanyIdSettingsCompanyRouteImport } from './routes/dashboard/company.$companyId/settings/company'
import { Route as DashboardCompanyCompanyIdSettingsBillingRouteImport } from './routes/dashboard/company.$companyId/settings/billing'
import { Route as DashboardCompanyCompanyIdReportsInvoiceQuantityRouteImport } from './routes/dashboard/company.$companyId/reports/invoice-quantity'
import { Route as DashboardCompanyCompanyIdReportsInventoryRouteImport } from './routes/dashboard/company.$companyId/reports/inventory'
import { ServerRoute as ApiV1HealthServerRouteImport } from './routes/api.v1.health'

const rootServerRouteImport = createServerRootRoute()

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ForgotPasswordRoute = ForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordTokenRoute = ResetPasswordTokenRouteImport.update({
  id: '/reset-password/$token',
  path: '/reset-password/$token',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardCompanyCompanyIdRouteRoute =
  DashboardCompanyCompanyIdRouteRouteImport.update({
    id: '/company/$companyId',
    path: '/company/$companyId',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardCompanyCompanyIdUsersRoute =
  DashboardCompanyCompanyIdUsersRouteImport.update({
    id: '/users',
    path: '/users',
    getParentRoute: () => DashboardCompanyCompanyIdRouteRoute,
  } as any)
const DashboardCompanyCompanyIdProfileRoute =
  DashboardCompanyCompanyIdProfileRouteImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => DashboardCompanyCompanyIdRouteRoute,
  } as any)
const DashboardCompanyCompanyIdHomeRoute =
  DashboardCompanyCompanyIdHomeRouteImport.update({
    id: '/home',
    path: '/home',
    getParentRoute: () => DashboardCompanyCompanyIdRouteRoute,
  } as any)
const DashboardCompanyCompanyIdActivityLogsRoute =
  DashboardCompanyCompanyIdActivityLogsRouteImport.update({
    id: '/activity-logs',
    path: '/activity-logs',
    getParentRoute: () => DashboardCompanyCompanyIdRouteRoute,
  } as any)
const DashboardCompanyCompanyIdSettingsRouteRoute =
  DashboardCompanyCompanyIdSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => DashboardCompanyCompanyIdRouteRoute,
  } as any)
const DashboardCompanyCompanyIdReportsRouteRoute =
  DashboardCompanyCompanyIdReportsRouteRouteImport.update({
    id: '/reports',
    path: '/reports',
    getParentRoute: () => DashboardCompanyCompanyIdRouteRoute,
  } as any)
const DashboardCompanyCompanyIdSettingsLocationsRoute =
  DashboardCompanyCompanyIdSettingsLocationsRouteImport.update({
    id: '/locations',
    path: '/locations',
    getParentRoute: () => DashboardCompanyCompanyIdSettingsRouteRoute,
  } as any)
const DashboardCompanyCompanyIdSettingsIntegrationsRoute =
  DashboardCompanyCompanyIdSettingsIntegrationsRouteImport.update({
    id: '/integrations',
    path: '/integrations',
    getParentRoute: () => DashboardCompanyCompanyIdSettingsRouteRoute,
  } as any)
const DashboardCompanyCompanyIdSettingsCompanyRoute =
  DashboardCompanyCompanyIdSettingsCompanyRouteImport.update({
    id: '/company',
    path: '/company',
    getParentRoute: () => DashboardCompanyCompanyIdSettingsRouteRoute,
  } as any)
const DashboardCompanyCompanyIdSettingsBillingRoute =
  DashboardCompanyCompanyIdSettingsBillingRouteImport.update({
    id: '/billing',
    path: '/billing',
    getParentRoute: () => DashboardCompanyCompanyIdSettingsRouteRoute,
  } as any)
const DashboardCompanyCompanyIdReportsInvoiceQuantityRoute =
  DashboardCompanyCompanyIdReportsInvoiceQuantityRouteImport.update({
    id: '/invoice-quantity',
    path: '/invoice-quantity',
    getParentRoute: () => DashboardCompanyCompanyIdReportsRouteRoute,
  } as any)
const DashboardCompanyCompanyIdReportsInventoryRoute =
  DashboardCompanyCompanyIdReportsInventoryRouteImport.update({
    id: '/inventory',
    path: '/inventory',
    getParentRoute: () => DashboardCompanyCompanyIdReportsRouteRoute,
  } as any)
const ApiV1HealthServerRoute = ApiV1HealthServerRouteImport.update({
  id: '/api/v1/health',
  path: '/api/v1/health',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/reset-password/$token': typeof ResetPasswordTokenRoute
  '/dashboard/company/$companyId': typeof DashboardCompanyCompanyIdRouteRouteWithChildren
  '/dashboard/company/$companyId/reports': typeof DashboardCompanyCompanyIdReportsRouteRouteWithChildren
  '/dashboard/company/$companyId/settings': typeof DashboardCompanyCompanyIdSettingsRouteRouteWithChildren
  '/dashboard/company/$companyId/activity-logs': typeof DashboardCompanyCompanyIdActivityLogsRoute
  '/dashboard/company/$companyId/home': typeof DashboardCompanyCompanyIdHomeRoute
  '/dashboard/company/$companyId/profile': typeof DashboardCompanyCompanyIdProfileRoute
  '/dashboard/company/$companyId/users': typeof DashboardCompanyCompanyIdUsersRoute
  '/dashboard/company/$companyId/reports/inventory': typeof DashboardCompanyCompanyIdReportsInventoryRoute
  '/dashboard/company/$companyId/reports/invoice-quantity': typeof DashboardCompanyCompanyIdReportsInvoiceQuantityRoute
  '/dashboard/company/$companyId/settings/billing': typeof DashboardCompanyCompanyIdSettingsBillingRoute
  '/dashboard/company/$companyId/settings/company': typeof DashboardCompanyCompanyIdSettingsCompanyRoute
  '/dashboard/company/$companyId/settings/integrations': typeof DashboardCompanyCompanyIdSettingsIntegrationsRoute
  '/dashboard/company/$companyId/settings/locations': typeof DashboardCompanyCompanyIdSettingsLocationsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/reset-password/$token': typeof ResetPasswordTokenRoute
  '/dashboard/company/$companyId': typeof DashboardCompanyCompanyIdRouteRouteWithChildren
  '/dashboard/company/$companyId/reports': typeof DashboardCompanyCompanyIdReportsRouteRouteWithChildren
  '/dashboard/company/$companyId/settings': typeof DashboardCompanyCompanyIdSettingsRouteRouteWithChildren
  '/dashboard/company/$companyId/activity-logs': typeof DashboardCompanyCompanyIdActivityLogsRoute
  '/dashboard/company/$companyId/home': typeof DashboardCompanyCompanyIdHomeRoute
  '/dashboard/company/$companyId/profile': typeof DashboardCompanyCompanyIdProfileRoute
  '/dashboard/company/$companyId/users': typeof DashboardCompanyCompanyIdUsersRoute
  '/dashboard/company/$companyId/reports/inventory': typeof DashboardCompanyCompanyIdReportsInventoryRoute
  '/dashboard/company/$companyId/reports/invoice-quantity': typeof DashboardCompanyCompanyIdReportsInvoiceQuantityRoute
  '/dashboard/company/$companyId/settings/billing': typeof DashboardCompanyCompanyIdSettingsBillingRoute
  '/dashboard/company/$companyId/settings/company': typeof DashboardCompanyCompanyIdSettingsCompanyRoute
  '/dashboard/company/$companyId/settings/integrations': typeof DashboardCompanyCompanyIdSettingsIntegrationsRoute
  '/dashboard/company/$companyId/settings/locations': typeof DashboardCompanyCompanyIdSettingsLocationsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/reset-password/$token': typeof ResetPasswordTokenRoute
  '/dashboard/company/$companyId': typeof DashboardCompanyCompanyIdRouteRouteWithChildren
  '/dashboard/company/$companyId/reports': typeof DashboardCompanyCompanyIdReportsRouteRouteWithChildren
  '/dashboard/company/$companyId/settings': typeof DashboardCompanyCompanyIdSettingsRouteRouteWithChildren
  '/dashboard/company/$companyId/activity-logs': typeof DashboardCompanyCompanyIdActivityLogsRoute
  '/dashboard/company/$companyId/home': typeof DashboardCompanyCompanyIdHomeRoute
  '/dashboard/company/$companyId/profile': typeof DashboardCompanyCompanyIdProfileRoute
  '/dashboard/company/$companyId/users': typeof DashboardCompanyCompanyIdUsersRoute
  '/dashboard/company/$companyId/reports/inventory': typeof DashboardCompanyCompanyIdReportsInventoryRoute
  '/dashboard/company/$companyId/reports/invoice-quantity': typeof DashboardCompanyCompanyIdReportsInvoiceQuantityRoute
  '/dashboard/company/$companyId/settings/billing': typeof DashboardCompanyCompanyIdSettingsBillingRoute
  '/dashboard/company/$companyId/settings/company': typeof DashboardCompanyCompanyIdSettingsCompanyRoute
  '/dashboard/company/$companyId/settings/integrations': typeof DashboardCompanyCompanyIdSettingsIntegrationsRoute
  '/dashboard/company/$companyId/settings/locations': typeof DashboardCompanyCompanyIdSettingsLocationsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/dashboard'
    | '/forgot-password'
    | '/login'
    | '/reset-password/$token'
    | '/dashboard/company/$companyId'
    | '/dashboard/company/$companyId/reports'
    | '/dashboard/company/$companyId/settings'
    | '/dashboard/company/$companyId/activity-logs'
    | '/dashboard/company/$companyId/home'
    | '/dashboard/company/$companyId/profile'
    | '/dashboard/company/$companyId/users'
    | '/dashboard/company/$companyId/reports/inventory'
    | '/dashboard/company/$companyId/reports/invoice-quantity'
    | '/dashboard/company/$companyId/settings/billing'
    | '/dashboard/company/$companyId/settings/company'
    | '/dashboard/company/$companyId/settings/integrations'
    | '/dashboard/company/$companyId/settings/locations'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/dashboard'
    | '/forgot-password'
    | '/login'
    | '/reset-password/$token'
    | '/dashboard/company/$companyId'
    | '/dashboard/company/$companyId/reports'
    | '/dashboard/company/$companyId/settings'
    | '/dashboard/company/$companyId/activity-logs'
    | '/dashboard/company/$companyId/home'
    | '/dashboard/company/$companyId/profile'
    | '/dashboard/company/$companyId/users'
    | '/dashboard/company/$companyId/reports/inventory'
    | '/dashboard/company/$companyId/reports/invoice-quantity'
    | '/dashboard/company/$companyId/settings/billing'
    | '/dashboard/company/$companyId/settings/company'
    | '/dashboard/company/$companyId/settings/integrations'
    | '/dashboard/company/$companyId/settings/locations'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/dashboard'
    | '/forgot-password'
    | '/login'
    | '/reset-password/$token'
    | '/dashboard/company/$companyId'
    | '/dashboard/company/$companyId/reports'
    | '/dashboard/company/$companyId/settings'
    | '/dashboard/company/$companyId/activity-logs'
    | '/dashboard/company/$companyId/home'
    | '/dashboard/company/$companyId/profile'
    | '/dashboard/company/$companyId/users'
    | '/dashboard/company/$companyId/reports/inventory'
    | '/dashboard/company/$companyId/reports/invoice-quantity'
    | '/dashboard/company/$companyId/settings/billing'
    | '/dashboard/company/$companyId/settings/company'
    | '/dashboard/company/$companyId/settings/integrations'
    | '/dashboard/company/$companyId/settings/locations'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  LoginRoute: typeof LoginRoute
  ResetPasswordTokenRoute: typeof ResetPasswordTokenRoute
}
export interface FileServerRoutesByFullPath {
  '/api/v1/health': typeof ApiV1HealthServerRoute
}
export interface FileServerRoutesByTo {
  '/api/v1/health': typeof ApiV1HealthServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/v1/health': typeof ApiV1HealthServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/v1/health'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/v1/health'
  id: '__root__' | '/api/v1/health'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiV1HealthServerRoute: typeof ApiV1HealthServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password/$token': {
      id: '/reset-password/$token'
      path: '/reset-password/$token'
      fullPath: '/reset-password/$token'
      preLoaderRoute: typeof ResetPasswordTokenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/company/$companyId': {
      id: '/dashboard/company/$companyId'
      path: '/company/$companyId'
      fullPath: '/dashboard/company/$companyId'
      preLoaderRoute: typeof DashboardCompanyCompanyIdRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/company/$companyId/users': {
      id: '/dashboard/company/$companyId/users'
      path: '/users'
      fullPath: '/dashboard/company/$companyId/users'
      preLoaderRoute: typeof DashboardCompanyCompanyIdUsersRouteImport
      parentRoute: typeof DashboardCompanyCompanyIdRouteRoute
    }
    '/dashboard/company/$companyId/profile': {
      id: '/dashboard/company/$companyId/profile'
      path: '/profile'
      fullPath: '/dashboard/company/$companyId/profile'
      preLoaderRoute: typeof DashboardCompanyCompanyIdProfileRouteImport
      parentRoute: typeof DashboardCompanyCompanyIdRouteRoute
    }
    '/dashboard/company/$companyId/home': {
      id: '/dashboard/company/$companyId/home'
      path: '/home'
      fullPath: '/dashboard/company/$companyId/home'
      preLoaderRoute: typeof DashboardCompanyCompanyIdHomeRouteImport
      parentRoute: typeof DashboardCompanyCompanyIdRouteRoute
    }
    '/dashboard/company/$companyId/activity-logs': {
      id: '/dashboard/company/$companyId/activity-logs'
      path: '/activity-logs'
      fullPath: '/dashboard/company/$companyId/activity-logs'
      preLoaderRoute: typeof DashboardCompanyCompanyIdActivityLogsRouteImport
      parentRoute: typeof DashboardCompanyCompanyIdRouteRoute
    }
    '/dashboard/company/$companyId/settings': {
      id: '/dashboard/company/$companyId/settings'
      path: '/settings'
      fullPath: '/dashboard/company/$companyId/settings'
      preLoaderRoute: typeof DashboardCompanyCompanyIdSettingsRouteRouteImport
      parentRoute: typeof DashboardCompanyCompanyIdRouteRoute
    }
    '/dashboard/company/$companyId/reports': {
      id: '/dashboard/company/$companyId/reports'
      path: '/reports'
      fullPath: '/dashboard/company/$companyId/reports'
      preLoaderRoute: typeof DashboardCompanyCompanyIdReportsRouteRouteImport
      parentRoute: typeof DashboardCompanyCompanyIdRouteRoute
    }
    '/dashboard/company/$companyId/settings/locations': {
      id: '/dashboard/company/$companyId/settings/locations'
      path: '/locations'
      fullPath: '/dashboard/company/$companyId/settings/locations'
      preLoaderRoute: typeof DashboardCompanyCompanyIdSettingsLocationsRouteImport
      parentRoute: typeof DashboardCompanyCompanyIdSettingsRouteRoute
    }
    '/dashboard/company/$companyId/settings/integrations': {
      id: '/dashboard/company/$companyId/settings/integrations'
      path: '/integrations'
      fullPath: '/dashboard/company/$companyId/settings/integrations'
      preLoaderRoute: typeof DashboardCompanyCompanyIdSettingsIntegrationsRouteImport
      parentRoute: typeof DashboardCompanyCompanyIdSettingsRouteRoute
    }
    '/dashboard/company/$companyId/settings/company': {
      id: '/dashboard/company/$companyId/settings/company'
      path: '/company'
      fullPath: '/dashboard/company/$companyId/settings/company'
      preLoaderRoute: typeof DashboardCompanyCompanyIdSettingsCompanyRouteImport
      parentRoute: typeof DashboardCompanyCompanyIdSettingsRouteRoute
    }
    '/dashboard/company/$companyId/settings/billing': {
      id: '/dashboard/company/$companyId/settings/billing'
      path: '/billing'
      fullPath: '/dashboard/company/$companyId/settings/billing'
      preLoaderRoute: typeof DashboardCompanyCompanyIdSettingsBillingRouteImport
      parentRoute: typeof DashboardCompanyCompanyIdSettingsRouteRoute
    }
    '/dashboard/company/$companyId/reports/invoice-quantity': {
      id: '/dashboard/company/$companyId/reports/invoice-quantity'
      path: '/invoice-quantity'
      fullPath: '/dashboard/company/$companyId/reports/invoice-quantity'
      preLoaderRoute: typeof DashboardCompanyCompanyIdReportsInvoiceQuantityRouteImport
      parentRoute: typeof DashboardCompanyCompanyIdReportsRouteRoute
    }
    '/dashboard/company/$companyId/reports/inventory': {
      id: '/dashboard/company/$companyId/reports/inventory'
      path: '/inventory'
      fullPath: '/dashboard/company/$companyId/reports/inventory'
      preLoaderRoute: typeof DashboardCompanyCompanyIdReportsInventoryRouteImport
      parentRoute: typeof DashboardCompanyCompanyIdReportsRouteRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/v1/health': {
      id: '/api/v1/health'
      path: '/api/v1/health'
      fullPath: '/api/v1/health'
      preLoaderRoute: typeof ApiV1HealthServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface DashboardCompanyCompanyIdReportsRouteRouteChildren {
  DashboardCompanyCompanyIdReportsInventoryRoute: typeof DashboardCompanyCompanyIdReportsInventoryRoute
  DashboardCompanyCompanyIdReportsInvoiceQuantityRoute: typeof DashboardCompanyCompanyIdReportsInvoiceQuantityRoute
}

const DashboardCompanyCompanyIdReportsRouteRouteChildren: DashboardCompanyCompanyIdReportsRouteRouteChildren =
  {
    DashboardCompanyCompanyIdReportsInventoryRoute:
      DashboardCompanyCompanyIdReportsInventoryRoute,
    DashboardCompanyCompanyIdReportsInvoiceQuantityRoute:
      DashboardCompanyCompanyIdReportsInvoiceQuantityRoute,
  }

const DashboardCompanyCompanyIdReportsRouteRouteWithChildren =
  DashboardCompanyCompanyIdReportsRouteRoute._addFileChildren(
    DashboardCompanyCompanyIdReportsRouteRouteChildren,
  )

interface DashboardCompanyCompanyIdSettingsRouteRouteChildren {
  DashboardCompanyCompanyIdSettingsBillingRoute: typeof DashboardCompanyCompanyIdSettingsBillingRoute
  DashboardCompanyCompanyIdSettingsCompanyRoute: typeof DashboardCompanyCompanyIdSettingsCompanyRoute
  DashboardCompanyCompanyIdSettingsIntegrationsRoute: typeof DashboardCompanyCompanyIdSettingsIntegrationsRoute
  DashboardCompanyCompanyIdSettingsLocationsRoute: typeof DashboardCompanyCompanyIdSettingsLocationsRoute
}

const DashboardCompanyCompanyIdSettingsRouteRouteChildren: DashboardCompanyCompanyIdSettingsRouteRouteChildren =
  {
    DashboardCompanyCompanyIdSettingsBillingRoute:
      DashboardCompanyCompanyIdSettingsBillingRoute,
    DashboardCompanyCompanyIdSettingsCompanyRoute:
      DashboardCompanyCompanyIdSettingsCompanyRoute,
    DashboardCompanyCompanyIdSettingsIntegrationsRoute:
      DashboardCompanyCompanyIdSettingsIntegrationsRoute,
    DashboardCompanyCompanyIdSettingsLocationsRoute:
      DashboardCompanyCompanyIdSettingsLocationsRoute,
  }

const DashboardCompanyCompanyIdSettingsRouteRouteWithChildren =
  DashboardCompanyCompanyIdSettingsRouteRoute._addFileChildren(
    DashboardCompanyCompanyIdSettingsRouteRouteChildren,
  )

interface DashboardCompanyCompanyIdRouteRouteChildren {
  DashboardCompanyCompanyIdReportsRouteRoute: typeof DashboardCompanyCompanyIdReportsRouteRouteWithChildren
  DashboardCompanyCompanyIdSettingsRouteRoute: typeof DashboardCompanyCompanyIdSettingsRouteRouteWithChildren
  DashboardCompanyCompanyIdActivityLogsRoute: typeof DashboardCompanyCompanyIdActivityLogsRoute
  DashboardCompanyCompanyIdHomeRoute: typeof DashboardCompanyCompanyIdHomeRoute
  DashboardCompanyCompanyIdProfileRoute: typeof DashboardCompanyCompanyIdProfileRoute
  DashboardCompanyCompanyIdUsersRoute: typeof DashboardCompanyCompanyIdUsersRoute
}

const DashboardCompanyCompanyIdRouteRouteChildren: DashboardCompanyCompanyIdRouteRouteChildren =
  {
    DashboardCompanyCompanyIdReportsRouteRoute:
      DashboardCompanyCompanyIdReportsRouteRouteWithChildren,
    DashboardCompanyCompanyIdSettingsRouteRoute:
      DashboardCompanyCompanyIdSettingsRouteRouteWithChildren,
    DashboardCompanyCompanyIdActivityLogsRoute:
      DashboardCompanyCompanyIdActivityLogsRoute,
    DashboardCompanyCompanyIdHomeRoute: DashboardCompanyCompanyIdHomeRoute,
    DashboardCompanyCompanyIdProfileRoute:
      DashboardCompanyCompanyIdProfileRoute,
    DashboardCompanyCompanyIdUsersRoute: DashboardCompanyCompanyIdUsersRoute,
  }

const DashboardCompanyCompanyIdRouteRouteWithChildren =
  DashboardCompanyCompanyIdRouteRoute._addFileChildren(
    DashboardCompanyCompanyIdRouteRouteChildren,
  )

interface DashboardRouteRouteChildren {
  DashboardCompanyCompanyIdRouteRoute: typeof DashboardCompanyCompanyIdRouteRouteWithChildren
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardCompanyCompanyIdRouteRoute:
    DashboardCompanyCompanyIdRouteRouteWithChildren,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  ForgotPasswordRoute: ForgotPasswordRoute,
  LoginRoute: LoginRoute,
  ResetPasswordTokenRoute: ResetPasswordTokenRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiV1HealthServerRoute: ApiV1HealthServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
